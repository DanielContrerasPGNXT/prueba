name: Node.js CI

on:
  push:
    branches:
      - main
      - dev
      - fix-*
      - feat-*
  workflow_dispatch:

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache NPM dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-npm-
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Clean install Node.js dependencies
      run: |
        npm ci

  build-release:
    name: Build release
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: https://npm.pkg.github.com/
        scope: '@DanielContrerasPGNXT'
    - name: Setup git config
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
    - name: Release Node.js module
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.PRUEBA_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.PRUEBA_TOKEN }}
      run: |
        npx -p @semantic-release/changelog -p @semantic-release/npm -p @semantic-release/git -p @semantic-release/github -p semantic-release semantic-release
        zip testAsset.zip .husky/*
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PRUEBA_TOKEN }}
        UPLOAD_URL: https://uploads.github.com/repos/DanielContrerasPGNXT/prueba/releases/2.0.0-dev.7
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./testAsset.zip
        asset_name: testAsset.zip
        asset_content_type: application/zip

  prerelease:
    name: Pre Release
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    needs: build-release

    steps:
    - name: Building Prerelease
      run: |
        echo 'Builded Prerelease'

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build-release

    steps:
    - name: Building Release
      run: echo 'Builded Release'
